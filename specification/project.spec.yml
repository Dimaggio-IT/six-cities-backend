openapi: 3.0.0
info:
  title: API сервер для демо-проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0

tags:
- name: users
  description: Действия с пользователем.
- name: offers
  description: Действия с объявлениями.
- name: comments
  description: Действия с комментариями.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Данные для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true

      responses:
        "201":
          description: Пользователь создан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userAuth'

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

      requestBody:
        description: Данные для авторизации пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userAuth'
        required: true

      responses:
        "200":
          description: Пользователь авторизован. Токен пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userToken'
        "400":
          description: Неверный логин или пароль.
    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю

      requestBody:
        description: Данные для проверки состояния пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userToken'
        required: true

      responses:
        "200":
          description: Данные по авторизованному пользователю.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userAuth'
        "400":
          description: Неверный логин или пароль.
        "403":
          description: Получить информацию о пользователе может только владелец аккаунта.

  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение
        аватара должно быть в формате `png` или `jpg`.

      requestBody:
        description: Загружает изображение аватара пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userAvatar'
        required: true

      responses:
        "200":
          description: Аватар успешно загружен.
        "400":
          description: Ошибка загрузки аватара.

  /offers:
    get:
      tags:
        - offers
      summary: Получение предложений по аренде
      description: Получает список предложений по аренде.
      responses:
        "200":
          description: Список предложений.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerPreview'
    post:
      tags:
        - offers
      summary: Создание предложения по аренде
      description: Создаёт предложение по аренде

      requestBody:
        description: Данные для создания предложения по аренде.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer'
        required: true

      responses:
       "200":
          description: Предложение по аренде успешно создано.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
       "403":
          description: Создавать предложения по аренде могут только авторизованные пользователи.

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Получение предложения по аренде
      description: Получает предложение по аренде.

      responses:
        "200":
          description: Предложение по аренде успешно получено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
    patch:
      tags:
        - offers
      summary: Обновление предложения по аренде
      description: Обновляет предложение по аренде.

      requestBody:
        description: Данные для обновления предложения.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer'
        required: true

      responses:
        "200":
          description: Предложение по аренде обновлено успешно.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "403":
          description: Нет прав для редактирования.
    delete:
      tags:
        - offers
      summary: Удаление предложения по аренде
      description: Удаляет предложение по аренде.

      responses:
        "204":
          description: Предложение по аренде успешно удалено.
        "403":
          description: Нет прав для удаления этого предложения.

  /offers/premium:
    get:
      tags:
        - offers
      summary: Получение премиальных предложений по аренде
      description: Получает список премиальных предложений. Сервис возвращает не больше 3 предложений с флагом «Premium»

      responses:
        "200":
          description: Список предложений с флагом «Premium».
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerPreview'

  /offers/favorites:
    get:
      tags:
        - offers
      summary: Получение избранных предложений по аренде
      description: Получает список избранных предложений.

      responses:
        "200":
          description: Список избранных предложений.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerPreview'
        "403":
          description: Ресурс доступен только авторизованным клиентам.

  /offers/favorites/{offerId}:
    post:
      tags:
        - offers
      summary: Добавление предложения в Избранное
      description: Изменяет статус Избранное предложения.

      requestBody:
        description: Данные для редактирования предложения по аренде.
        content:
          application/json:
            schema:
              type: object
              properties:
                offerId:
                  type: string
                  example: 6329c3d6a04ab1061c6425ea
        required: true

      responses:
        "204":
          description: Статус предложения Избранное успешно изменён.
        "403":
          description: Изменять статус может только авторизованный пользователь.
    delete:
      tags:
        - offers
      summary: Удаление предложения из Избранного
      description: Изменяет статус Избранное предложения.

      requestBody:
        description: Данные для редактирования предложения по аренде.
        content:
          application/json:
            schema:
              type: object
              properties:
                offerId:
                  type: string
                  example: 6329c3d6a04ab1061c6425ea
        required: true

      responses:
        "200":
          description: Предложение по аренде успешно удалено из Избранного.
        "403":
          description: Изменять статус может только авторизованный пользователь.

  /comments/{offerId}:
    get:
      tags:
        - comments
      summary: Получение комментариев
      description: Получает список комментариев предложения.

      responses:
        "200":
          description: Список комментариев.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'
    post:
      tags:
        - comments
      summary: Создание комментария
      description: Создаёт новый комментарий предложения.

      requestBody:
        description: Данные для создания комментария.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
        required: true

      responses:
        "201":
          description: Комментарий успешно создан.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/comment'
        "403":
          description: Создавать комментарии могут только авторизованные пользователи.

components:
  schemas:
    user:
      type: object
      properties:
        name:
          type: string
          example: Svetlana Ivanova
        email:
          type: string
          example: first@test.io
        avatar:
          type: string
          example: https://14.design.htmlacademy.pro/static/avatar/1.jpg
        type:
          type: string
          example: обычный
        password:
          type: string
          example: pa$$w0rd
    userAuth:
      type: object
      properties:
        name:
          type: string
          example: Svetlana Ivanova
        email:
          type: string
          example: first@test.io
        avatar:
          type: string
          example: https://14.design.htmlacademy.pro/static/avatar/1.jpg
        type:
          type: string
          example: pro
    userToken:
      type: object
      properties:
        token:
          type: string
          example: 6329c3d6a04ab1061c6425ea
        email:
          type: string
          example: middle@test.io
    userAvatar:
      type: object
      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea
        avatar:
          type: string
          example: https://14.design.htmlacademy.pro/static/avatar/1.jpg
    offer:
      type: object
      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea
        date:
          type: string
          example: 2024-02-10T00:12:43.283Z
        title:
          type: string
          example: Nice apartment
        description:
          type: string
          example: A new spacious villa, one floor
        city:
          type: string
          example: Paris
        previewImage:
          type: string
          example: avatar.jpg
        images:
          type: array
          example:
            [
              https://14.design.htmlacademy.pro/static/hotel/1.jpg,
              https://14.design.htmlacademy.pro/static/hotel/2.jpg,
              https://14.design.htmlacademy.pro/static/hotel/3.jpg,
              https://14.design.htmlacademy.pro/static/hotel/4.jpg,
            ]
        premium:
          type: boolean
          example: true
        favorite:
          type: boolean
          example: false
        rating:
          type: number
          example: 5
        type:
          type: string
          example: Apartment
        bedrooms:
          type: number
          example: 4
        maxAdults:
          type: number
          example: 3
        price:
          type: number
          example: 1_000
        goods:
          type: array
          example: [Washer, Fridge]
        commentCount:
          type: number
          example: 12
        author:
          type: object
          $ref: '#/components/schemas/author'
        location:
          type: object
          $ref: '#/components/schemas/location'
    offerPreview:
      type: object
      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea
        date:
          type: string
          example: 2024-02-10T00:12:43.283Z
        title:
          type: string
          example: Nice apartment
        city:
          type: string
          example: Paris
        previewImage:
          type: string
          example: "avatar.jpg"
        premium:
          type: boolean
          example: true
        favorite:
          type: boolean
          example: false
        rating:
          type: number
          example: 3
        type:
          type: string
          example: Apartment
        price:
          type: number
          example: 1_000
        commentCount:
          type: number
          example: 12
    location:
      type: object
      properties:
        latitude:
          type: string
          example: '1.902145'
        longitude:
          type: string
          example: '2.486427'
    author:
      type: object
      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea
        name:
          type: string
          example: Svetlana Ivanova
        avatar:
          type: string
          example: avatar.jpg
        type:
          type: string
          example: обычный
    comment:
      type: object
      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea
        text:
          type: string
          example:
        date:
          type: string
          example: 2024-02-11T00:51:43.283Z
        rating:
          type: number
          example: 5
        author:
          type: object
          $ref: '#/components/schemas/author'
